#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderSystem.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OrderSystem")]
	public partial class CustomerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public CustomerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OrderSystemConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CustomerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _CustomerForename;
		
		private string _CustomerSurname;
		
		private string _CustomerEmail;
		
		private System.Nullable<int> _CustomerPhoneNumber;
		
		private string _CustomerAddressLine1;
		
		private string _CustomerAddressLine2;
		
		private string _CustomerCity;
		
		private string _CustomerCounty;
		
		private string _CustomerPostcode;
		
		private string _CustomerPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerForenameChanging(string value);
    partial void OnCustomerForenameChanged();
    partial void OnCustomerSurnameChanging(string value);
    partial void OnCustomerSurnameChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerPhoneNumberChanging(System.Nullable<int> value);
    partial void OnCustomerPhoneNumberChanged();
    partial void OnCustomerAddressLine1Changing(string value);
    partial void OnCustomerAddressLine1Changed();
    partial void OnCustomerAddressLine2Changing(string value);
    partial void OnCustomerAddressLine2Changed();
    partial void OnCustomerCityChanging(string value);
    partial void OnCustomerCityChanged();
    partial void OnCustomerCountyChanging(string value);
    partial void OnCustomerCountyChanged();
    partial void OnCustomerPostcodeChanging(string value);
    partial void OnCustomerPostcodeChanged();
    partial void OnCustomerPasswordChanging(string value);
    partial void OnCustomerPasswordChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerForename", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CustomerForename
		{
			get
			{
				return this._CustomerForename;
			}
			set
			{
				if ((this._CustomerForename != value))
				{
					this.OnCustomerForenameChanging(value);
					this.SendPropertyChanging();
					this._CustomerForename = value;
					this.SendPropertyChanged("CustomerForename");
					this.OnCustomerForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerSurname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerSurname
		{
			get
			{
				return this._CustomerSurname;
			}
			set
			{
				if ((this._CustomerSurname != value))
				{
					this.OnCustomerSurnameChanging(value);
					this.SendPropertyChanging();
					this._CustomerSurname = value;
					this.SendPropertyChanged("CustomerSurname");
					this.OnCustomerSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="VarChar(65) NOT NULL", CanBeNull=false)]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhoneNumber", DbType="Int")]
		public System.Nullable<int> CustomerPhoneNumber
		{
			get
			{
				return this._CustomerPhoneNumber;
			}
			set
			{
				if ((this._CustomerPhoneNumber != value))
				{
					this.OnCustomerPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhoneNumber = value;
					this.SendPropertyChanged("CustomerPhoneNumber");
					this.OnCustomerPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddressLine1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CustomerAddressLine1
		{
			get
			{
				return this._CustomerAddressLine1;
			}
			set
			{
				if ((this._CustomerAddressLine1 != value))
				{
					this.OnCustomerAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._CustomerAddressLine1 = value;
					this.SendPropertyChanged("CustomerAddressLine1");
					this.OnCustomerAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddressLine2", DbType="VarChar(30)")]
		public string CustomerAddressLine2
		{
			get
			{
				return this._CustomerAddressLine2;
			}
			set
			{
				if ((this._CustomerAddressLine2 != value))
				{
					this.OnCustomerAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._CustomerAddressLine2 = value;
					this.SendPropertyChanged("CustomerAddressLine2");
					this.OnCustomerAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCity", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerCity
		{
			get
			{
				return this._CustomerCity;
			}
			set
			{
				if ((this._CustomerCity != value))
				{
					this.OnCustomerCityChanging(value);
					this.SendPropertyChanging();
					this._CustomerCity = value;
					this.SendPropertyChanged("CustomerCity");
					this.OnCustomerCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCounty", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerCounty
		{
			get
			{
				return this._CustomerCounty;
			}
			set
			{
				if ((this._CustomerCounty != value))
				{
					this.OnCustomerCountyChanging(value);
					this.SendPropertyChanging();
					this._CustomerCounty = value;
					this.SendPropertyChanged("CustomerCounty");
					this.OnCustomerCountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPostcode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string CustomerPostcode
		{
			get
			{
				return this._CustomerPostcode;
			}
			set
			{
				if ((this._CustomerPostcode != value))
				{
					this.OnCustomerPostcodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerPostcode = value;
					this.SendPropertyChanged("CustomerPostcode");
					this.OnCustomerPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPassword", DbType="VarChar(30)")]
		public string CustomerPassword
		{
			get
			{
				return this._CustomerPassword;
			}
			set
			{
				if ((this._CustomerPassword != value))
				{
					this.OnCustomerPasswordChanging(value);
					this.SendPropertyChanging();
					this._CustomerPassword = value;
					this.SendPropertyChanged("CustomerPassword");
					this.OnCustomerPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
